From 22907db99ecfd0bf39fe89fb0c5cfd7e2d0e6e60 Mon Sep 17 00:00:00 2001
From: zsy-jason <186247581+zsy-jason@users.noreply.github.com>
Date: Thu, 3 Jul 2025 21:31:43 +0800
Subject: [PATCH] [Infra] Add Harmony OS support.

---
 BUILD.gn               | 19 ++++++++++++++++++-
 libxhook/jni/xh_core.c |  6 ++++--
 libxhook/jni/xh_elf.c  |  2 ++
 libxhook/jni/xh_jni.c  |  4 ++++
 libxhook/jni/xh_log.c  | 13 +++++++++++--
 libxhook/jni/xh_log.h  | 33 ++++++++++++++++++++++++++++++---
 libxhook/jni/xh_util.c |  8 ++++++--
 7 files changed, 75 insertions(+), 10 deletions(-)

diff --git a/BUILD.gn b/BUILD.gn
index 0688438..0c82cb2 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -1,6 +1,19 @@
 # Copyright 2020 The Lynx Authors. All rights reserved.
 
-assert(is_android)
+assert(is_android || is_harmony)
+
+config("xhook_private_config") {
+   defines = []
+  if (is_android) {
+    defines += [
+      "OS_ANDROID=1",
+    ]
+  } else if (is_harmony) {
+    defines += [
+      "OS_HARMONY=1",
+    ]
+  }
+}
 
 source_set("xhook") {
   sources = [
@@ -34,4 +47,8 @@ source_set("xhook") {
     "libxhook/jni/xhook.h",
   ]
 
+  configs += [
+    ":xhook_private_config",
+  ]
+
 }
diff --git a/libxhook/jni/xh_core.c b/libxhook/jni/xh_core.c
index 41fcd6f..fa1857a 100644
--- a/libxhook/jni/xh_core.c
+++ b/libxhook/jni/xh_core.c
@@ -22,6 +22,7 @@
 // Created by caikelun on 2018-04-11.
 
 #include <inttypes.h>
+#include <signal.h>
 #include <stdio.h>
 #include <stdint.h>
 #include <ctype.h>
@@ -485,8 +486,9 @@ static void xh_core_refresh_impl()
 static void *xh_core_refresh_thread_func(void *arg)
 {
     (void)arg;
-    
+#if OS_ANDROID
     pthread_setname_np(pthread_self(), "xh_refresh_loop");
+#endif
 
     while(xh_core_refresh_thread_running)
     {
@@ -667,7 +669,7 @@ void xh_core_clear()
 
 void xh_core_enable_debug(int flag)
 {
-    xh_log_priority = (flag ? ANDROID_LOG_DEBUG : ANDROID_LOG_WARN);
+    xh_log_priority = (flag ? LOG_DEBUG : LOG_WARN);;
 }
 
 void xh_core_enable_sigsegv_protection(int flag)
diff --git a/libxhook/jni/xh_elf.c b/libxhook/jni/xh_elf.c
index 1d80371..2e9ddc3 100644
--- a/libxhook/jni/xh_elf.c
+++ b/libxhook/jni/xh_elf.c
@@ -845,6 +845,7 @@ int xh_elf_init(xh_elf_t *self, uintptr_t base_addr, const char *pathname)
         case DT_RELASZ:
             self->reldyn_sz = dyn->d_un.d_val;
             break;
+#if OS_ANDROID
         case DT_ANDROID_REL:
         case DT_ANDROID_RELA:
             {
@@ -856,6 +857,7 @@ int xh_elf_init(xh_elf_t *self, uintptr_t base_addr, const char *pathname)
         case DT_ANDROID_RELASZ:
             self->relandroid_sz = dyn->d_un.d_val;
             break;
+#endif
         case DT_HASH:
             {
                 //ignore DT_HASH when ELF contains DT_GNU_HASH hash table
diff --git a/libxhook/jni/xh_jni.c b/libxhook/jni/xh_jni.c
index f8ae223..605e52e 100644
--- a/libxhook/jni/xh_jni.c
+++ b/libxhook/jni/xh_jni.c
@@ -21,6 +21,8 @@
 
 // Created by caikelun on 2018-04-11.
 
+#if OS_ANDROID
+
 #include <jni.h>
 #include "xhook.h"
 
@@ -57,3 +59,5 @@ JNIEXPORT void JNI_API_DEF(enableSigSegvProtection)(JNIEnv *env, jobject obj, jb
 
     xhook_enable_sigsegv_protection(flag ? 1 : 0);
 }
+
+#endif // OS_ANDROID
diff --git a/libxhook/jni/xh_log.c b/libxhook/jni/xh_log.c
index 6cba947..52ba3f0 100644
--- a/libxhook/jni/xh_log.c
+++ b/libxhook/jni/xh_log.c
@@ -21,7 +21,16 @@
 
 // Created by caikelun on 2018-04-11.
 
-#include <android/log.h>
 #include "xh_log.h"
+LogPriority xh_log_priority = LOG_WARN;
+#if !defined(OS_ANDROID)
+#include <stdarg.h>
+#include <stdio.h>
+void xh_log_format(char* buf, size_t size, const char* fmt, ...) {
+  va_list args;
+  va_start(args, fmt);
+  snprintf(buf, size, fmt, args);
+  va_end(args);
+}
 
-android_LogPriority xh_log_priority = ANDROID_LOG_WARN;
+#endif
diff --git a/libxhook/jni/xh_log.h b/libxhook/jni/xh_log.h
index e108c4b..0e79312 100644
--- a/libxhook/jni/xh_log.h
+++ b/libxhook/jni/xh_log.h
@@ -24,15 +24,25 @@
 #ifndef XH_LOG_H
 #define XH_LOG_H 1
 
+#if OS_ANDROID
+
 #include <android/log.h>
+#define LogPriority android_LogPriority
+#else
+#include <hilog/log.h>
+#define LogPriority int
+#endif
 
+extern LogPriority xh_log_priority;
+#define XH_LOG_TAG "xhook"
+
+#if OS_ANDROID
 #ifdef __cplusplus
 extern "C" {
 #endif
 
-extern android_LogPriority xh_log_priority;
-
-#define XH_LOG_TAG "xhook"
+#define LOG_DEBUG ANDROID_LOG_DEBUG
+#define LOG_WARN ANDROID_LOG_WARN
 #define XH_LOG_DEBUG(fmt, ...) do{if(xh_log_priority <= ANDROID_LOG_DEBUG) __android_log_print(ANDROID_LOG_DEBUG, XH_LOG_TAG, fmt, ##__VA_ARGS__);}while(0)
 #define XH_LOG_INFO(fmt, ...)  do{if(xh_log_priority <= ANDROID_LOG_INFO)  __android_log_print(ANDROID_LOG_INFO,  XH_LOG_TAG, fmt, ##__VA_ARGS__);}while(0)
 #define XH_LOG_WARN(fmt, ...)  do{if(xh_log_priority <= ANDROID_LOG_WARN)  __android_log_print(ANDROID_LOG_WARN,  XH_LOG_TAG, fmt, ##__VA_ARGS__);}while(0)
@@ -41,5 +51,22 @@ extern android_LogPriority xh_log_priority;
 #ifdef __cplusplus
 }
 #endif
+#else  // OS_ANDROID
+
+#define LOG_DEBUG LOG_DEBUG
+#define LOG_WARN LOG_WARN
+#include <stddef.h>
+void xh_log_format(char* buf, size_t size, const char* fmt, ...);
 
+#define XH_LOG_HARMONY(level, fmt, ...) do {                                  \
+    char log_buf[1024] = {'\0'};                                              \
+    xh_log_format(log_buf, sizeof(log_buf), fmt, ##__VA_ARGS__);              \
+    OH_LOG_Print(LOG_APP, level, 0xFF00, XH_LOG_TAG, "%{public}s", log_buf);  \
+  } while(0)
+
+#define XH_LOG_DEBUG(fmt, ...) if(xh_log_priority <= LOG_DEBUG) { XH_LOG_HARMONY(LOG_DEBUG, fmt, ##__VA_ARGS__);}
+#define XH_LOG_INFO(fmt, ...)  if(xh_log_priority <= LOG_INFO) {XH_LOG_HARMONY(LOG_INFO, fmt, ##__VA_ARGS__);}
+#define XH_LOG_WARN(fmt, ...)  if(xh_log_priority <= LOG_WARN) {XH_LOG_HARMONY(LOG_WARN, fmt, ##__VA_ARGS__);}
+#define XH_LOG_ERROR(fmt, ...) if(xh_log_priority <= LOG_ERROR) {XH_LOG_HARMONY(LOG_ERROR, fmt, ##__VA_ARGS__);}
+#endif
 #endif
diff --git a/libxhook/jni/xh_util.c b/libxhook/jni/xh_util.c
index 0e2dca2..406f69f 100644
--- a/libxhook/jni/xh_util.c
+++ b/libxhook/jni/xh_util.c
@@ -25,6 +25,7 @@
 #include <stdint.h>
 #include <inttypes.h>
 #include <elf.h>
+#include <limits.h>
 #include <link.h>
 #include <string.h>
 #include <stdio.h>
@@ -37,8 +38,11 @@
 #include "xh_errno.h"
 #include "xh_log.h"
 
-#define PAGE_START(addr) ((addr) & PAGE_MASK)
-#define PAGE_END(addr)   (PAGE_START(addr + sizeof(uintptr_t) - 1) + PAGE_SIZE)
+#define PAGE_SIZE_T (getpagesize())
+#define PAGE_MASK_T (~(PAGE_SIZE_T-1))
+
+#define PAGE_START(addr) ((addr) & PAGE_MASK_T)
+#define PAGE_END(addr)   (PAGE_START(addr + sizeof(uintptr_t) - 1) + PAGE_SIZE_T)
 #define PAGE_COVER(addr) (PAGE_END(addr) - PAGE_START(addr))
 
 int xh_util_get_mem_protect(uintptr_t addr, size_t len, const char *pathname, unsigned int *prot)
-- 
2.49.0

